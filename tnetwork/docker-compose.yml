#
# Copyright IBM Corp All Rights Reserved
#
# SPDX-License-Identifier: Apache-2.0
#
version: '2'

networks:
  basic:

services:
  ca.ict.com:
    image: hyperledger/fabric-ca
    environment:
      - FABRIC_CA_HOME=/etc/hyperledger/fabric-ca-server
      - FABRIC_CA_SERVER_CA_NAME=ca.ict.com
      - FABRIC_CA_SERVER_CA_CERTFILE=/etc/hyperledger/fabric-ca-server-config/ca.org1.ict.com-cert.pem
      - FABRIC_CA_SERVER_CA_KEYFILE=/etc/hyperledger/fabric-ca-server-config/${CA1_PRIVATE_KEY}
    ports:
      - "7054:7054"
    command: sh -c 'fabric-ca-server start -b admin:caadminpw@'
    volumes:
      - ./crypto-config/peerOrganizations/org1.ict.com/ca/:/etc/hyperledger/fabric-ca-server-config
    container_name: ca.ict.com
    networks:
      - basic

  ca.org2.ict.com:
    image: hyperledger/fabric-ca
    environment:
      - FABRIC_CA_HOME=/etc/hyperledger/fabric-ca-server
      - FABRIC_CA_SERVER_CA_NAME=ca.org2.ict.com
      - FABRIC_CA_SERVER_CA_CERTFILE=/etc/hyperledger/fabric-ca-server-config/ca.org2.ict.com-cert.pem
      - FABRIC_CA_SERVER_CA_KEYFILE=/etc/hyperledger/fabric-ca-server-config/${CA2_PRIVATE_KEY}
    ports:
      - "8054:7054"
    command: sh -c 'fabric-ca-server start -b admin:caadminpw@'
    volumes:
      - ./crypto-config/peerOrganizations/org2.ict.com/ca/:/etc/hyperledger/fabric-ca-server-config
    container_name: ca.org2.ict.com
    networks:
      - basic

  orderer.ict.com: #etcdraft -> 추가적으로 작업들... 연결...
    container_name: orderer.ict.com
    image: hyperledger/fabric-orderer # orderer 실행파일이 들어있음
    environment:
      - FABRIC_LOGGING_SPEC=info
      - ORDERER_GENERAL_LISTENADDRESS=0.0.0.0
      - ORDERER_GENERAL_GENESISMETHOD=file
      - ORDERER_GENERAL_GENESISFILE=/etc/hyperledger/configtx/genesis.block
      - ORDERER_GENERAL_LOCALMSPID=OrdererMSP
      - ORDERER_GENERAL_LOCALMSPDIR=/etc/hyperledger/msp/orderer/msp
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric/orderer
    command: orderer
    ports:
      - 7050:7050
    volumes:
        - ./config/:/etc/hyperledger/configtx
        - ./crypto-config/ordererOrganizations/ict.com/orderers/orderer.ict.com/:/etc/hyperledger/msp/orderer
        - ./crypto-config/peerOrganizations/org1.ict.com/peers/peer0.org1.ict.com/:/etc/hyperledger/msp/peerOrg1
    networks:
      - basic

  peer0.org1.ict.com:
    container_name: peer0.org1.ict.com
    image: hyperledger/fabric-peer # peer 프로그램 포함
    environment:
      - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
      - CORE_PEER_ID=peer0.org1.ict.com
      - FABRIC_LOGGING_SPEC=info
      - CORE_CHAINCODE_LOGGING_LEVEL=info
      - CORE_PEER_LOCALMSPID=Org1MSP      # 기관의 ID
      - CORE_PEER_MSPCONFIGPATH=/etc/hyperledger/msp/peer/ # 피어의 MSP구조
      - CORE_PEER_ADDRESS=peer0.org1.ict.com:7051 # 피어 주소와 포트
      - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=${COMPOSE_PROJECT_NAME}_basic
      - CORE_LEDGER_STATE_STATEDATABASE=LevelDB # CouchDB or LevelDB
      - CORE_LEDGER_STATE_COUCHDBCONFIG_COUCHDBADDRESS=couchdb1:5984
      - CORE_LEDGER_STATE_COUCHDBCONFIG_USERNAME=
      - CORE_LEDGER_STATE_COUCHDBCONFIG_PASSWORD=
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric
    command: peer node start
    ports:
      - 7051:7051 # 체인코드 연결 노드명령수행
    volumes:
        - /var/run/:/host/var/run/
        - ./crypto-config/peerOrganizations/org1.ict.com/peers/peer0.org1.ict.com/msp:/etc/hyperledger/msp/peer
        - ./crypto-config/peerOrganizations/org1.ict.com/users:/etc/hyperledger/msp/users
        - ./config:/etc/hyperledger/configtx
    depends_on:
      - orderer.ict.com
      #- couchdb1
    networks:
      - basic
  peer0.org2.ict.com:
    container_name: peer0.org2.ict.com
    image: hyperledger/fabric-peer # peer 프로그램 포함
    environment:
      - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
      - CORE_PEER_ID=peer0.org2.ict.com
      - FABRIC_LOGGING_SPEC=info
      - CORE_CHAINCODE_LOGGING_LEVEL=info
      - CORE_PEER_LOCALMSPID=Org2MSP      # 기관의 ID
      - CORE_PEER_MSPCONFIGPATH=/etc/hyperledger/msp/peer/ # 피어의 MSP구조
      - CORE_PEER_ADDRESS=peer0.org2.ict.com:7051 # 피어 주소와 포트
      - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=${COMPOSE_PROJECT_NAME}_basic
      - CORE_LEDGER_STATE_STATEDATABASE=LevelDB # CouchDB or LevelDB
      - CORE_LEDGER_STATE_COUCHDBCONFIG_COUCHDBADDRESS=couchdb2:5984 
      - CORE_LEDGER_STATE_COUCHDBCONFIG_USERNAME=
      - CORE_LEDGER_STATE_COUCHDBCONFIG_PASSWORD=
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric
    command: peer node start
    ports:
      - 8051:7051 # 체인코드 연결 노드명령수행
    volumes:
        - /var/run/:/host/var/run/
        - ./crypto-config/peerOrganizations/org2.ict.com/peers/peer0.org2.ict.com/msp:/etc/hyperledger/msp/peer
        - ./crypto-config/peerOrganizations/org2.ict.com/users:/etc/hyperledger/msp/users
        - ./config:/etc/hyperledger/configtx
    depends_on:
      - orderer.ict.com
      #- couchdb2
    networks:
      - basic
  peer0.org3.ict.com:
    container_name: peer0.org3.ict.com
    image: hyperledger/fabric-peer # peer 프로그램 포함
    environment:
      - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
      - CORE_PEER_ID=peer0.org3.ict.com
      - FABRIC_LOGGING_SPEC=info
      - CORE_CHAINCODE_LOGGING_LEVEL=info
      - CORE_PEER_LOCALMSPID=Org3MSP      # 기관의 ID
      - CORE_PEER_MSPCONFIGPATH=/etc/hyperledger/msp/peer/ # 피어의 MSP구조
      - CORE_PEER_ADDRESS=peer0.org3.ict.com:7051 # 피어 주소와 포트
      - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=${COMPOSE_PROJECT_NAME}_basic
      - CORE_LEDGER_STATE_STATEDATABASE=LevelDB # CouchDB or LevelDB
      - CORE_LEDGER_STATE_COUCHDBCONFIG_COUCHDBADDRESS=couchdb3:5984
      - CORE_LEDGER_STATE_COUCHDBCONFIG_USERNAME=
      - CORE_LEDGER_STATE_COUCHDBCONFIG_PASSWORD=
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric
    command: peer node start
    ports:
      - 9051:7051 # 체인코드 연결 노드명령수행
    volumes:
        - /var/run/:/host/var/run/
        - ./crypto-config/peerOrganizations/org3.ict.com/peers/peer0.org3.ict.com/msp:/etc/hyperledger/msp/peer
        - ./crypto-config/peerOrganizations/org3.ict.com/users:/etc/hyperledger/msp/users
        - ./config:/etc/hyperledger/configtx
    depends_on:
      - orderer.ict.com
      #- couchdb3
    networks:
      - basic

  couchdb1:
    container_name: couchdb1
    image: hyperledger/fabric-couchdb
    environment:
      - COUCHDB_USER=
      - COUCHDB_PASSWORD=
    ports:
      - 5984:5984
    networks:
      - basic
  couchdb2:
    container_name: couchdb2
    image: hyperledger/fabric-couchdb
    environment:
      - COUCHDB_USER=
      - COUCHDB_PASSWORD=
    ports:
      - 6984:5984
    networks:
      - basic
  couchdb3:
    container_name: couchdb3
    image: hyperledger/fabric-couchdb
    environment:
      - COUCHDB_USER=
      - COUCHDB_PASSWORD=
    ports:
      - 7984:5984
    networks:
      - basic

  cli:  # 체인코드, 채널을 설정하기 위한 클라이언트 컨테이너
    container_name: cli
    image: hyperledger/fabric-tools # 리눅스 1.5G peer, orderer, fabric-ca-client, cryptogen...
    tty: true
    environment:
      - GOPATH=/opt/gopath # 체인코드 설치배포... 
      - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
      - FABRIC_LOGGING_SPEC=info
      - CORE_PEER_ID=cli
      - CORE_PEER_ADDRESS=peer0.org1.ict.com:7051 # 접속하는 peer 의 주소
      - CORE_PEER_LOCALMSPID=Org1MSP                  # 접속하는 기관의 ID
      - CORE_PEER_MSPCONFIGPATH=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org1.ict.com/users/Admin@org1.ict.com/msp # 접속할때 사용하는 identity
      - CORE_CHAINCODE_KEEPALIVE=10
    working_dir: /etc/hyperledger/configtx
    command: /bin/bash
    volumes:
        - /var/run/:/host/var/run/
        - ./../contract:/opt/gopath/src/github.com/ # 체인코드 리눅스 <-> cli 컨테이너 공유폴더
        - ./crypto-config:/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/ # Identity 공유폴더
        - ./config:/etc/hyperledger/configtx
    networks:
        - basic
